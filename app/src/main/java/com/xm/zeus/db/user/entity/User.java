package com.xm.zeus.db.user.entity;

import com.xm.zeus.db.user.dao.DaoSession;
import com.xm.zeus.db.user.dao.UserDao;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "User".
 */
public class User {

    private String UserId;
    private String UserName;
    private String Password;
    private String Token;
    private String Status;
    private Boolean Logged;
    private Long LoggedDate;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient UserDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public User() {
    }

    public User(String UserId) {
        this.UserId = UserId;
    }

    public User(String UserId, String UserName, String Password, String Token, String Status, Boolean Logged, Long LoggedDate) {
        this.UserId = UserId;
        this.UserName = UserName;
        this.Password = Password;
        this.Token = Token;
        this.Status = Status;
        this.Logged = Logged;
        this.LoggedDate = LoggedDate;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getUserDao() : null;
    }

    public String getUserId() {
        return UserId;
    }

    public void setUserId(String UserId) {
        this.UserId = UserId;
    }

    public String getUserName() {
        return UserName;
    }

    public void setUserName(String UserName) {
        this.UserName = UserName;
    }

    public String getPassword() {
        return Password;
    }

    public void setPassword(String Password) {
        this.Password = Password;
    }

    public String getToken() {
        return Token;
    }

    public void setToken(String Token) {
        this.Token = Token;
    }

    public String getStatus() {
        return Status;
    }

    public void setStatus(String Status) {
        this.Status = Status;
    }

    public Boolean getLogged() {
        return Logged;
    }

    public void setLogged(Boolean Logged) {
        this.Logged = Logged;
    }

    public Long getLoggedDate() {
        return LoggedDate;
    }

    public void setLoggedDate(Long LoggedDate) {
        this.LoggedDate = LoggedDate;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
