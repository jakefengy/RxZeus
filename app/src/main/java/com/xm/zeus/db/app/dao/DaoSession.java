package com.xm.zeus.db.app.dao;

import android.database.sqlite.SQLiteDatabase;

import com.xm.zeus.db.app.entity.Colleague;
import com.xm.zeus.db.app.entity.ColleagueDept;
import com.xm.zeus.db.app.entity.Friend;
import com.xm.zeus.db.app.entity.Group;
import com.xm.zeus.db.app.entity.GroupMemberId;
import com.xm.zeus.db.app.entity.TimeStamp;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig colleagueDaoConfig;
    private final DaoConfig colleagueDeptDaoConfig;
    private final DaoConfig friendDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig groupMemberIdDaoConfig;
    private final DaoConfig timeStampDaoConfig;

    private final ColleagueDao colleagueDao;
    private final ColleagueDeptDao colleagueDeptDao;
    private final FriendDao friendDao;
    private final GroupDao groupDao;
    private final GroupMemberIdDao groupMemberIdDao;
    private final TimeStampDao timeStampDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        colleagueDaoConfig = daoConfigMap.get(ColleagueDao.class).clone();
        colleagueDaoConfig.initIdentityScope(type);

        colleagueDeptDaoConfig = daoConfigMap.get(ColleagueDeptDao.class).clone();
        colleagueDeptDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        groupMemberIdDaoConfig = daoConfigMap.get(GroupMemberIdDao.class).clone();
        groupMemberIdDaoConfig.initIdentityScope(type);

        timeStampDaoConfig = daoConfigMap.get(TimeStampDao.class).clone();
        timeStampDaoConfig.initIdentityScope(type);

        colleagueDao = new ColleagueDao(colleagueDaoConfig, this);
        colleagueDeptDao = new ColleagueDeptDao(colleagueDeptDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        groupMemberIdDao = new GroupMemberIdDao(groupMemberIdDaoConfig, this);
        timeStampDao = new TimeStampDao(timeStampDaoConfig, this);

        registerDao(Colleague.class, colleagueDao);
        registerDao(ColleagueDept.class, colleagueDeptDao);
        registerDao(Friend.class, friendDao);
        registerDao(Group.class, groupDao);
        registerDao(GroupMemberId.class, groupMemberIdDao);
        registerDao(TimeStamp.class, timeStampDao);
    }
    
    public void clear() {
        colleagueDaoConfig.getIdentityScope().clear();
        colleagueDeptDaoConfig.getIdentityScope().clear();
        friendDaoConfig.getIdentityScope().clear();
        groupDaoConfig.getIdentityScope().clear();
        groupMemberIdDaoConfig.getIdentityScope().clear();
        timeStampDaoConfig.getIdentityScope().clear();
    }

    public ColleagueDao getColleagueDao() {
        return colleagueDao;
    }

    public ColleagueDeptDao getColleagueDeptDao() {
        return colleagueDeptDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

    public GroupMemberIdDao getGroupMemberIdDao() {
        return groupMemberIdDao;
    }

    public TimeStampDao getTimeStampDao() {
        return timeStampDao;
    }

}
